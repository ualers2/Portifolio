name: Deploy Portfolio


on:
  pull_request:
    types: [closed]
    branches:
      - main


jobs:
  build-and-deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Pegar o código do repositório
    - name: Checkout code
      uses: actions/checkout@v3

    # 2️⃣ Configurar Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    # 3️⃣ Instalar dependências e build
    - name: Install dependencies (front-end)
      working-directory: front-end
      run: npm ci

    - name: Build project (front-end)
      working-directory: front-end
      run: npm run build

    # 4️⃣ Configurar SSH
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.1
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add remote host to known_hosts
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        echo "known_hosts:"
        cat ~/.ssh/known_hosts

    # 5️⃣ Copiar todo o projeto para VPS
    - name: Copy entire project to VPS
      run: |
        rsync -avz --delete ./ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/home/administrator/deploys/portfolio \
          --exclude node_modules \
          --exclude .git \
          --exclude front-end/node_modules

    - name: Install jq on VPS
      run: |
        ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
          sudo apt-get update && sudo apt-get install -y jq
        "
        
    - name: Create Firebase.json on VPS
      run: |
        ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
          mkdir -p /home/administrator/deploys/portfolio/back-end/Keys
          echo '${{ secrets.FIREBASE_KEYS }}' | jq '.' > /home/administrator/deploys/portfolio/back-end/Keys/Firebase.json
        "

    - name: Create .env on VPS
      run: |
        ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
          mkdir -p /home/administrator/deploys/portfolio/back-end/Keys && \
          printf '%s' '${{ secrets.ENV_KEYS }}' > /home/administrator/deploys/portfolio/back-end/Keys/.env
        "

    # 6️⃣ Buildar e subir containers na VPS
    - name: Deploy Docker Compose
      run: |
        ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
          cd /home/administrator/deploys/portfolio && \
          docker-compose down -v --remove-orphans || true && \
          docker rm -f landing api || true && \
          docker rmi \$(docker images -q portfolio_landing) || true && \
          docker rmi \$(docker images -q portfolio_api) || true && \
          docker-compose up -d --build
        "
